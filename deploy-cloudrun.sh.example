#!/bin/bash

# Deploy Smart TRA MCP Server to Google Cloud Run
# Usage: ./deploy-cloudrun.sh [PROJECT_ID] [REGION]

set -e

PROJECT_ID=${1:-"your-gcp-project-id"}
REGION=${2:-"asia-east1"}
SERVICE_NAME="smart-tra-mcp-server"
IMAGE_NAME="gcr.io/${PROJECT_ID}/${SERVICE_NAME}"

# TDX API credentials (set these environment variables before running)
TDX_CLIENT_ID=${TDX_CLIENT_ID:-"your-tdx-client-id"}
TDX_CLIENT_SECRET=${TDX_CLIENT_SECRET:-"your-tdx-client-secret"}

echo "üöÄ Deploying Smart TRA MCP Server to Cloud Run"
echo "Project: ${PROJECT_ID}"
echo "Region: ${REGION}"
echo "Service: ${SERVICE_NAME}"

# Validate required environment variables
if [[ "${TDX_CLIENT_ID}" == "your-tdx-client-id" ]] || [[ "${TDX_CLIENT_SECRET}" == "your-tdx-client-secret" ]]; then
  echo "‚ùå Error: Please set TDX_CLIENT_ID and TDX_CLIENT_SECRET environment variables"
  echo "Example: export TDX_CLIENT_ID=your_actual_client_id"
  echo "         export TDX_CLIENT_SECRET=your_actual_client_secret"
  exit 1
fi

# Build and push container
echo "üì¶ Building container..."
gcloud builds submit --tag ${IMAGE_NAME} --project ${PROJECT_ID}

echo "üöÄ Deploying to Cloud Run..."
gcloud run deploy ${SERVICE_NAME} \
  --image ${IMAGE_NAME} \
  --platform managed \
  --region ${REGION} \
  --allow-unauthenticated \
  --port 8080 \
  --memory 1Gi \
  --cpu 1 \
  --min-instances 0 \
  --max-instances 10 \
  --timeout 300 \
  --concurrency 80 \
  --set-env-vars NODE_ENV=production \
  --set-env-vars TDX_CLIENT_ID=${TDX_CLIENT_ID} \
  --set-env-vars TDX_CLIENT_SECRET=${TDX_CLIENT_SECRET} \
  --set-env-vars ALLOWED_ORIGINS=https://n8n.lis186.com \
  --project ${PROJECT_ID}

echo "‚úÖ Deployment complete!"

# Get the service URL
SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --platform managed --region ${REGION} --format 'value(status.url)' --project ${PROJECT_ID})
echo "üåê Service URL: ${SERVICE_URL}"
echo "üè• Health check: ${SERVICE_URL}/health"
echo "üîß MCP endpoint: ${SERVICE_URL}/mcp"

# Test health endpoint
echo "üß™ Testing health endpoint..."
curl -f "${SERVICE_URL}/health" | jq '.' || echo "Health check failed"